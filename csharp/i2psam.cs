//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class i2psam {
  public static uint strnlen_int(string start, uint max_len) {
    uint ret = i2psamPINVOKE.strnlen_int(start, max_len);
    return ret;
  }

  public static SWIGTYPE_p_i2psam_stream_session i2psam_stream_session_new(i2psam_stream_settings arg0) {
    global::System.IntPtr cPtr = i2psamPINVOKE.i2psam_stream_session_new(i2psam_stream_settings.getCPtr(arg0));
    SWIGTYPE_p_i2psam_stream_session ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_i2psam_stream_session(cPtr, false);
    return ret;
  }

  public static void i2psam_stream_session_free(SWIGTYPE_p_i2psam_stream_session arg0) {
    i2psamPINVOKE.i2psam_stream_session_free(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
  }

  public static string i2psam_get_samhost(SWIGTYPE_p_i2psam_stream_session arg0) {
    string ret = i2psamPINVOKE.i2psam_get_samhost(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
    return ret;
  }

  public static SWIGTYPE_p_uint16_t i2psam_get_samport(SWIGTYPE_p_i2psam_stream_session arg0) {
    SWIGTYPE_p_uint16_t ret = new SWIGTYPE_p_uint16_t(i2psamPINVOKE.i2psam_get_samport(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0)), true);
    return ret;
  }

  public static string i2psam_get_nickname(SWIGTYPE_p_i2psam_stream_session arg0) {
    string ret = i2psamPINVOKE.i2psam_get_nickname(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
    return ret;
  }

  public static string i2psam_get_session_id(SWIGTYPE_p_i2psam_stream_session arg0) {
    string ret = i2psamPINVOKE.i2psam_get_session_id(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
    return ret;
  }

  public static string i2psam_get_sam_min_version(SWIGTYPE_p_i2psam_stream_session arg0) {
    string ret = i2psamPINVOKE.i2psam_get_sam_min_version(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
    return ret;
  }

  public static string i2psam_get_sam_max_version(SWIGTYPE_p_i2psam_stream_session arg0) {
    string ret = i2psamPINVOKE.i2psam_get_sam_max_version(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
    return ret;
  }

  public static string i2psam_get_sam_version(SWIGTYPE_p_i2psam_stream_session arg0) {
    string ret = i2psamPINVOKE.i2psam_get_sam_version(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
    return ret;
  }

  public static string i2psam_get_i2cp_options(SWIGTYPE_p_i2psam_stream_session arg0) {
    string ret = i2psamPINVOKE.i2psam_get_i2cp_options(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
    return ret;
  }

  public static int i2psam_is_sick(SWIGTYPE_p_i2psam_stream_session arg0) {
    int ret = i2psamPINVOKE.i2psam_is_sick(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
    return ret;
  }

  public static SWIGTYPE_p_i2psam_socket i2psam_accept(SWIGTYPE_p_i2psam_stream_session arg0, int silent) {
    global::System.IntPtr cPtr = i2psamPINVOKE.i2psam_accept(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0), silent);
    SWIGTYPE_p_i2psam_socket ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_i2psam_socket(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_i2psam_socket i2psam_connect(SWIGTYPE_p_i2psam_stream_session arg0, string destination, int silent) {
    global::System.IntPtr cPtr = i2psamPINVOKE.i2psam_connect(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0), destination, silent);
    SWIGTYPE_p_i2psam_socket ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_i2psam_socket(cPtr, false);
    return ret;
  }

  public static int i2psam_forward(SWIGTYPE_p_i2psam_stream_session arg0, string host, SWIGTYPE_p_uint16_t port, int silent) {
    int ret = i2psamPINVOKE.i2psam_forward(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0), host, SWIGTYPE_p_uint16_t.getCPtr(port), silent);
    if (i2psamPINVOKE.SWIGPendingException.Pending) throw i2psamPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string i2psam_namelookup(SWIGTYPE_p_i2psam_stream_session arg0, string name) {
    string ret = i2psamPINVOKE.i2psam_namelookup(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0), name);
    return ret;
  }

  public static SWIGTYPE_p_i2psam_destination i2psam_dest_generate(SWIGTYPE_p_i2psam_stream_session arg0) {
    global::System.IntPtr cPtr = i2psamPINVOKE.i2psam_dest_generate(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
    SWIGTYPE_p_i2psam_destination ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_i2psam_destination(cPtr, false);
    return ret;
  }

  public static void i2psam_stop_forwarding(SWIGTYPE_p_i2psam_stream_session arg0, string host, SWIGTYPE_p_uint16_t port) {
    i2psamPINVOKE.i2psam_stop_forwarding(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0), host, SWIGTYPE_p_uint16_t.getCPtr(port));
    if (i2psamPINVOKE.SWIGPendingException.Pending) throw i2psamPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void i2psam_stop_forwarding_all(SWIGTYPE_p_i2psam_stream_session arg0) {
    i2psamPINVOKE.i2psam_stop_forwarding_all(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
  }

  public static SWIGTYPE_p_i2psam_destination i2psam_get_my_destination(SWIGTYPE_p_i2psam_stream_session arg0) {
    global::System.IntPtr cPtr = i2psamPINVOKE.i2psam_get_my_destination(SWIGTYPE_p_i2psam_stream_session.getCPtr(arg0));
    SWIGTYPE_p_i2psam_destination ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_i2psam_destination(cPtr, false);
    return ret;
  }

  public static void i2psam_write(SWIGTYPE_p_i2psam_socket arg0, string data, uint dlen) {
    i2psamPINVOKE.i2psam_write(SWIGTYPE_p_i2psam_socket.getCPtr(arg0), data, dlen);
  }

  public static string i2psam_read(SWIGTYPE_p_i2psam_socket arg0, SWIGTYPE_p_size_t dlen) {
    string ret = i2psamPINVOKE.i2psam_read(SWIGTYPE_p_i2psam_socket.getCPtr(arg0), SWIGTYPE_p_size_t.getCPtr(dlen));
    return ret;
  }

  public static void i2psam_socket_close(SWIGTYPE_p_i2psam_socket arg0) {
    i2psamPINVOKE.i2psam_socket_close(SWIGTYPE_p_i2psam_socket.getCPtr(arg0));
  }

  public static int i2psam_socket_is_ok(SWIGTYPE_p_i2psam_socket arg0) {
    int ret = i2psamPINVOKE.i2psam_socket_is_ok(SWIGTYPE_p_i2psam_socket.getCPtr(arg0));
    return ret;
  }

  public static void i2psam_socket_free(SWIGTYPE_p_i2psam_socket arg0) {
    i2psamPINVOKE.i2psam_socket_free(SWIGTYPE_p_i2psam_socket.getCPtr(arg0));
  }

  public static string i2psam_destination_priv(SWIGTYPE_p_i2psam_destination arg0) {
    string ret = i2psamPINVOKE.i2psam_destination_priv(SWIGTYPE_p_i2psam_destination.getCPtr(arg0));
    return ret;
  }

  public static string i2psam_destination_pub(SWIGTYPE_p_i2psam_destination arg0) {
    string ret = i2psamPINVOKE.i2psam_destination_pub(SWIGTYPE_p_i2psam_destination.getCPtr(arg0));
    return ret;
  }

  public static void i2psam_destination_free(SWIGTYPE_p_i2psam_destination arg0) {
    i2psamPINVOKE.i2psam_destination_free(SWIGTYPE_p_i2psam_destination.getCPtr(arg0));
  }

  public static readonly string SAM_DEFAULT_ADDRESS = i2psamPINVOKE.SAM_DEFAULT_ADDRESS_get();
  public static readonly int SAM_DEFAULT_PORT = i2psamPINVOKE.SAM_DEFAULT_PORT_get();
  public static readonly string SAM_GENERATE_MY_DESTINATION = i2psamPINVOKE.SAM_GENERATE_MY_DESTINATION_get();
  public static readonly string SAM_MY_NAME = i2psamPINVOKE.SAM_MY_NAME_get();
  public static readonly string SAM_DEFAULT_I2P_OPTIONS = i2psamPINVOKE.SAM_DEFAULT_I2P_OPTIONS_get();
  public static readonly string SAM_SIGNATURE_TYPE = i2psamPINVOKE.SAM_SIGNATURE_TYPE_get();
  public static readonly string SAM_NAME_INBOUND_QUANTITY = i2psamPINVOKE.SAM_NAME_INBOUND_QUANTITY_get();
  public static readonly int SAM_DEFAULT_INBOUND_QUANTITY = i2psamPINVOKE.SAM_DEFAULT_INBOUND_QUANTITY_get();
  public static readonly string SAM_NAME_INBOUND_LENGTH = i2psamPINVOKE.SAM_NAME_INBOUND_LENGTH_get();
  public static readonly int SAM_DEFAULT_INBOUND_LENGTH = i2psamPINVOKE.SAM_DEFAULT_INBOUND_LENGTH_get();
  public static readonly string SAM_NAME_INBOUND_LENGTHVARIANCE = i2psamPINVOKE.SAM_NAME_INBOUND_LENGTHVARIANCE_get();
  public static readonly int SAM_DEFAULT_INBOUND_LENGTHVARIANCE = i2psamPINVOKE.SAM_DEFAULT_INBOUND_LENGTHVARIANCE_get();
  public static readonly string SAM_NAME_INBOUND_BACKUPQUANTITY = i2psamPINVOKE.SAM_NAME_INBOUND_BACKUPQUANTITY_get();
  public static readonly int SAM_DEFAULT_INBOUND_BACKUPQUANTITY = i2psamPINVOKE.SAM_DEFAULT_INBOUND_BACKUPQUANTITY_get();
  public static readonly string SAM_NAME_INBOUND_ALLOWZEROHOP = i2psamPINVOKE.SAM_NAME_INBOUND_ALLOWZEROHOP_get();
  public static readonly string SAM_NAME_INBOUND_IPRESTRICTION = i2psamPINVOKE.SAM_NAME_INBOUND_IPRESTRICTION_get();
  public static readonly int SAM_DEFAULT_INBOUND_IPRESTRICTION = i2psamPINVOKE.SAM_DEFAULT_INBOUND_IPRESTRICTION_get();
  public static readonly string SAM_NAME_OUTBOUND_QUANTITY = i2psamPINVOKE.SAM_NAME_OUTBOUND_QUANTITY_get();
  public static readonly int SAM_DEFAULT_OUTBOUND_QUANTITY = i2psamPINVOKE.SAM_DEFAULT_OUTBOUND_QUANTITY_get();
  public static readonly string SAM_NAME_OUTBOUND_LENGTH = i2psamPINVOKE.SAM_NAME_OUTBOUND_LENGTH_get();
  public static readonly int SAM_DEFAULT_OUTBOUND_LENGTH = i2psamPINVOKE.SAM_DEFAULT_OUTBOUND_LENGTH_get();
  public static readonly string SAM_NAME_OUTBOUND_LENGTHVARIANCE = i2psamPINVOKE.SAM_NAME_OUTBOUND_LENGTHVARIANCE_get();
  public static readonly int SAM_DEFAULT_OUTBOUND_LENGTHVARIANCE = i2psamPINVOKE.SAM_DEFAULT_OUTBOUND_LENGTHVARIANCE_get();
  public static readonly string SAM_NAME_OUTBOUND_BACKUPQUANTITY = i2psamPINVOKE.SAM_NAME_OUTBOUND_BACKUPQUANTITY_get();
  public static readonly int SAM_DEFAULT_OUTBOUND_BACKUPQUANTITY = i2psamPINVOKE.SAM_DEFAULT_OUTBOUND_BACKUPQUANTITY_get();
  public static readonly string SAM_NAME_OUTBOUND_ALLOWZEROHOP = i2psamPINVOKE.SAM_NAME_OUTBOUND_ALLOWZEROHOP_get();
  public static readonly string SAM_NAME_OUTBOUND_IPRESTRICTION = i2psamPINVOKE.SAM_NAME_OUTBOUND_IPRESTRICTION_get();
  public static readonly int SAM_DEFAULT_OUTBOUND_IPRESTRICTION = i2psamPINVOKE.SAM_DEFAULT_OUTBOUND_IPRESTRICTION_get();
  public static readonly string SAM_NAME_OUTBOUND_PRIORITY = i2psamPINVOKE.SAM_NAME_OUTBOUND_PRIORITY_get();
  public static readonly int SOCKET_ERROR = i2psamPINVOKE.SOCKET_ERROR_get();
  public static readonly int MAX_PATH = i2psamPINVOKE.MAX_PATH_get();
  public static readonly int MSG_NOSIGNAL = i2psamPINVOKE.MSG_NOSIGNAL_get();
  public static readonly int PRIO_MAX = i2psamPINVOKE.PRIO_MAX_get();
  public static readonly int THREAD_PRIORITY_LOWEST = i2psamPINVOKE.THREAD_PRIORITY_LOWEST_get();
  public static readonly int THREAD_PRIORITY_BELOW_NORMAL = i2psamPINVOKE.THREAD_PRIORITY_BELOW_NORMAL_get();
  public static readonly int THREAD_PRIORITY_NORMAL = i2psamPINVOKE.THREAD_PRIORITY_NORMAL_get();
  public static readonly int THREAD_PRIORITY_ABOVE_NORMAL = i2psamPINVOKE.THREAD_PRIORITY_ABOVE_NORMAL_get();
}
